{
  "contractName": "IERC7092",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "isin",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currency",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "denomination",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "issueVolume",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "couponRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "couponType",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "couponFrequency",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dayCountBasis",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "issueDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maturityDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "principalOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"couponFrequency\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"couponRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"couponType\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currency\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dayCountBasis\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"denomination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isin\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issueDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"issueVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maturityDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"principalOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"params\":{\"_amount\":\"amount of bond tokens allowed by _owner to be spent by `_spender`        Or amount of bond tokens to decrease allowance from `_spender`\",\"_owner\":\"bondholder account\",\"_spender\":\"the account to be allowed to spend bonds\"}},\"Transfer(address,address,uint256)\":{\"params\":{\"_amount\":\"amount of bond tokens to be transferred\",\"_from\":\"bondholder account\",\"_to\":\"account to transfer bonds to\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"_owner\":\"the bondholder address\",\"_spender\":\"the address that has been authorized by the bondholder\"}},\"approve(address,uint256)\":{\"params\":{\"_amount\":\"amount of bond tokens to approve\",\"_spender\":\"the account to be authorized by the bondholder\"}},\"decreaseAllowance(address,uint256)\":{\"params\":{\"_amount\":\"amount of bond tokens to remove from allowance\",\"_spender\":\"the address to be authorized by the bondholder\"}},\"principalOf(address)\":{\"params\":{\"_account\":\"account address\"}},\"transfer(address,uint256,bytes)\":{\"params\":{\"_amount\":\"amount of bond tokens to transfer\",\"_data\":\"additional information provided by the token holder\",\"_to\":\"the address to send bonds to\"}},\"transferFrom(address,address,uint256,bytes)\":{\"params\":{\"_amount\":\"amount of bond tokens to transfer.\",\"_data\":\"additional information provided by the token holder\",\"_from\":\"the bondholder address\",\"_to\":\"the address to transfer bonds to\"}}},\"title\":\"ERC-7092 Financial Bonds tandard\",\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"MUST be emitted when an account is approved to spend tokens or when the allowance is decreased\"},\"Transfer(address,address,uint256)\":{\"notice\":\"MUST be emitted when bond tokens are transferred, issued or redeemed, with the exception being during contract creation\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the number of tokens that the `_spender` account has been authorized by the `_owner` to manage\"},\"approve(address,uint256)\":{\"notice\":\"Authorizes `_spender` account to manage  a specified `_amount`of the bondholder's tokens\"},\"couponFrequency()\":{\"notice\":\"Returns the coupon frequency, i.e. the number of times coupons are paid in a year. OPTIONAL - interfaces and other contracts MUST NOT expect these values to be present. The method is used to improve usability.\"},\"couponRate()\":{\"notice\":\"Returns the bond interest rate. It is RECOMMENDED to express the interest rate in basis points (bps).         1 basis point = 0.01% = 0.0001         ex: if interest rate = 5%, then coupon() => 500 basis points\"},\"couponType()\":{\"notice\":\"Returns the coupon type         For example, 0 can denote Zero coupon, 1 can denote Fixed Rate, 2 can denote Floating Rate, and so on OPTIONAL - interfaces and other contracts MUST NOT expect these values to be present. The method is used to improve usability.\"},\"currency()\":{\"notice\":\"Returns the bond currency. This is the contract address of the token used to make payments and return the bond principal\"},\"dayCountBasis()\":{\"notice\":\"Returns the day count basis         For example, 0 can denote actual/actual, 1 can denote actual/360, and so on OPTIONAL - interfaces and other contracts MUST NOT expect these values to be present. The method is used to improve usability.\"},\"decreaseAllowance(address,uint256)\":{\"notice\":\"Decreases the allowance granted to `_spender` by `_amount`\"},\"denomination()\":{\"notice\":\"Returns the bond denomination. This is the minimum amount in which the bonds may be issued. It MUST be expressed in units of the principal currency.         ex: If the denomination is set at 1,000, and the currency is USDC, then the bond denomination is equivalent to 1,000 USDC.\"},\"isin()\":{\"notice\":\"Returns the bond isin\"},\"issueDate()\":{\"notice\":\"Returns the date when bonds were issued to investors. This is a Unix Timestamp similar the one returned by block.timestamp\"},\"issueVolume()\":{\"notice\":\"Returns the issue volume, which represents the total debt amount. It is RECOMMENDED to express the issue volume in terms of the denomination unit.\"},\"maturityDate()\":{\"notice\":\"Returns the bond maturity date, i.e, the date when the principal is repaid. This is a Unix Timestamp similar the one returned by block.timestamp         The maturity date MUST be greater than the issue date\"},\"name()\":{\"notice\":\"Returns the bond name\"},\"principalOf(address)\":{\"notice\":\"Returns the principal of an account. It is RECOMMENDED to express the principal in the bond currency unit (e.g., USDC, DAI, etc)\"},\"symbol()\":{\"notice\":\"Returns the bond symbol         It is RECOMMENDED to represent the symbol as a combination of the issuer issuer's shorter name and the maturity date         Ex: If a company named Green Energy issues bonds that will mature on october 25, 2030, the bond symbol could be `GE30` or `GE2030` or `GE102530`\"},\"transfer(address,uint256,bytes)\":{\"notice\":\"Transfers `_amount` bonds to the address `_to`. Additionally, this method enables to attach data to the token being transferred\"},\"transferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers `_amount` bonds from an account that has previously authorized the caller through the `approve` function         This methods also allows to attach data to the token that is being transferred\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/IERC7092.sol\":\"IERC7092\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/IERC7092.sol\":{\"keccak256\":\"0x85f1d6acff44ec38cb75cc3b72d3eebc5bda34e615e96a855e4544d3770a1c6d\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://585b961b22a0f8ed413d28c286fc398606c5cacd4de0cb8f33a002066d10c1d4\",\"dweb:/ipfs/QmcZEV1zHM5yGd1cLeDC6tpC7ny5uKXX816yYNZ2zvGymC\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: CC0-1.0\npragma solidity ^0.8.0;\n\n/**\n* @title ERC-7092 Financial Bonds tandard\n*/\ninterface IERC7092 {\n    /**\n    *  @notice Returns the bond isin\n    */\n    function isin() external view returns(string memory);\n\n    /**\n    * @notice Returns the bond name\n    */\n    function name() external view returns(string memory);\n\n    /**\n    * @notice Returns the bond symbol\n    *         It is RECOMMENDED to represent the symbol as a combination of the issuer issuer's shorter name and the maturity date\n    *         Ex: If a company named Green Energy issues bonds that will mature on october 25, 2030, the bond symbol could be `GE30` or `GE2030` or `GE102530`\n    */\n    function symbol() external view returns(string memory);\n\n    /**\n    * @notice Returns the bond currency. This is the contract address of the token used to make payments and return the bond principal\n    */\n    function currency() external view returns(address);\n\n    /**\n    * @notice Returns the bond denomination. This is the minimum amount in which the bonds may be issued. It MUST be expressed in units of the principal currency.\n    *         ex: If the denomination is set at 1,000, and the currency is USDC, then the bond denomination is equivalent to 1,000 USDC.\n    */\n    function denomination() external view returns(uint256);\n\n    /**\n    * @notice Returns the issue volume, which represents the total debt amount. It is RECOMMENDED to express the issue volume in terms of the denomination unit.\n    */\n    function issueVolume() external view returns(uint256);\n\n    /**\n    * @notice Returns the bond interest rate. It is RECOMMENDED to express the interest rate in basis points (bps).\n    *         1 basis point = 0.01% = 0.0001\n    *         ex: if interest rate = 5%, then coupon() => 500 basis points\n    */\n    function couponRate() external view returns(uint256);\n\n    /**\n    * @notice Returns the coupon type\n    *         For example, 0 can denote Zero coupon, 1 can denote Fixed Rate, 2 can denote Floating Rate, and so on\n    *\n    * OPTIONAL - interfaces and other contracts MUST NOT expect these values to be present. The method is used to improve usability.\n    */\n    function couponType() external view returns(uint8);\n\n    /**\n    * @notice Returns the coupon frequency, i.e. the number of times coupons are paid in a year.\n    *\n    * OPTIONAL - interfaces and other contracts MUST NOT expect these values to be present. The method is used to improve usability.\n    */\n    function couponFrequency() external view returns(uint256);\n\n    /**\n    * @notice Returns the day count basis\n    *         For example, 0 can denote actual/actual, 1 can denote actual/360, and so on\n    *\n    * OPTIONAL - interfaces and other contracts MUST NOT expect these values to be present. The method is used to improve usability.\n    */\n    function dayCountBasis() external view returns(uint8);\n\n    /**\n    * @notice Returns the date when bonds were issued to investors. This is a Unix Timestamp similar the one returned by block.timestamp\n    */\n    function issueDate() external view returns(uint256);\n\n    /**\n    * @notice Returns the bond maturity date, i.e, the date when the principal is repaid. This is a Unix Timestamp similar the one returned by block.timestamp\n    *         The maturity date MUST be greater than the issue date\n    */\n    function maturityDate() external view returns(uint256);\n\n    /**\n    * @notice Returns the principal of an account. It is RECOMMENDED to express the principal in the bond currency unit (e.g., USDC, DAI, etc)\n    * @param _account account address\n    */\n    function principalOf(address _account) external view returns(uint256);\n\n    /**\n    * @notice Returns the number of tokens that the `_spender` account has been authorized by the `_owner` to manage\n    * @param _owner the bondholder address\n    * @param _spender the address that has been authorized by the bondholder\n    */\n    function allowance(address _owner, address _spender) external view returns(uint256);\n\n    /**\n    * @notice Authorizes `_spender` account to manage  a specified `_amount`of the bondholder's tokens\n    * @param _spender the account to be authorized by the bondholder\n    * @param _amount amount of bond tokens to approve\n    */\n    function approve(address _spender, uint256 _amount) external returns(bool);\n\n    /**\n    * @notice Decreases the allowance granted to `_spender` by `_amount`\n    * @param _spender the address to be authorized by the bondholder\n    * @param _amount amount of bond tokens to remove from allowance\n    */\n    function decreaseAllowance(address _spender, uint256 _amount) external returns(bool);\n\n    /**\n    * @notice Transfers `_amount` bonds to the address `_to`. Additionally, this method enables to attach data to the token being transferred\n    * @param _to the address to send bonds to\n    * @param _amount amount of bond tokens to transfer\n    * @param _data additional information provided by the token holder\n    */\n    function transfer(address _to, uint256 _amount, bytes calldata _data) external returns(bool);\n\n    /**\n    * @notice Transfers `_amount` bonds from an account that has previously authorized the caller through the `approve` function\n    *         This methods also allows to attach data to the token that is being transferred\n    * @param _from the bondholder address\n    * @param _to the address to transfer bonds to\n    * @param _amount amount of bond tokens to transfer.\n    * @param _data additional information provided by the token holder\n    */\n    function transferFrom(address _from, address _to, uint256 _amount, bytes calldata _data) external returns(bool);\n\n    /**\n    * @notice MUST be emitted when bond tokens are transferred, issued or redeemed, with the exception being during contract creation\n    * @param _from bondholder account\n    * @param _to account to transfer bonds to\n    * @param _amount amount of bond tokens to be transferred\n    */\n    event Transfer(address _from, address _to, uint256 _amount);\n\n    /**\n    * @notice MUST be emitted when an account is approved to spend tokens or when the allowance is decreased\n    * @param _owner bondholder account\n    * @param _spender the account to be allowed to spend bonds\n    * @param _amount amount of bond tokens allowed by _owner to be spent by `_spender`\n    *        Or amount of bond tokens to decrease allowance from `_spender`\n    */\n    event Approval(address _owner, address _spender, uint256 _amount);\n}",
  "sourcePath": "/Users/sam/Documents/Blockchain/Topos/ToposGrant/T-Grant/contracts/IERC7092.sol",
  "ast": {
    "absolutePath": "project:/contracts/IERC7092.sol",
    "exportedSymbols": {
      "IERC7092": [
        949
      ]
    },
    "id": 950,
    "license": "CC0-1.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 793,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC7092",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 794,
          "nodeType": "StructuredDocumentation",
          "src": "61:48:2",
          "text": " @title ERC-7092 Financial Bonds tandard"
        },
        "fullyImplemented": false,
        "id": 949,
        "linearizedBaseContracts": [
          949
        ],
        "name": "IERC7092",
        "nameLocation": "120:8:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 795,
              "nodeType": "StructuredDocumentation",
              "src": "135:47:2",
              "text": "  @notice Returns the bond isin"
            },
            "functionSelector": "82d5a60d",
            "id": 800,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isin",
            "nameLocation": "196:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "200:2:2"
            },
            "returnParameters": {
              "id": 799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 798,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "225:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "225:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "224:15:2"
            },
            "scope": 949,
            "src": "187:53:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 801,
              "nodeType": "StructuredDocumentation",
              "src": "246:46:2",
              "text": " @notice Returns the bond name"
            },
            "functionSelector": "06fdde03",
            "id": 806,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "306:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "310:2:2"
            },
            "returnParameters": {
              "id": 805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 804,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "335:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 803,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "335:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "334:15:2"
            },
            "scope": 949,
            "src": "297:53:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 807,
              "nodeType": "StructuredDocumentation",
              "src": "356:338:2",
              "text": " @notice Returns the bond symbol\n         It is RECOMMENDED to represent the symbol as a combination of the issuer issuer's shorter name and the maturity date\n         Ex: If a company named Green Energy issues bonds that will mature on october 25, 2030, the bond symbol could be `GE30` or `GE2030` or `GE102530`"
            },
            "functionSelector": "95d89b41",
            "id": 812,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "708:6:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "714:2:2"
            },
            "returnParameters": {
              "id": 811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 810,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 812,
                  "src": "739:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 809,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "739:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "738:15:2"
            },
            "scope": 949,
            "src": "699:55:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 813,
              "nodeType": "StructuredDocumentation",
              "src": "760:145:2",
              "text": " @notice Returns the bond currency. This is the contract address of the token used to make payments and return the bond principal"
            },
            "functionSelector": "e5a6b10f",
            "id": 818,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "currency",
            "nameLocation": "919:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "927:2:2"
            },
            "returnParameters": {
              "id": 817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 816,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 818,
                  "src": "952:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "952:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "951:9:2"
            },
            "scope": 949,
            "src": "910:51:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 819,
              "nodeType": "StructuredDocumentation",
              "src": "967:310:2",
              "text": " @notice Returns the bond denomination. This is the minimum amount in which the bonds may be issued. It MUST be expressed in units of the principal currency.\n         ex: If the denomination is set at 1,000, and the currency is USDC, then the bond denomination is equivalent to 1,000 USDC."
            },
            "functionSelector": "8bca6d16",
            "id": 824,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "denomination",
            "nameLocation": "1291:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1303:2:2"
            },
            "returnParameters": {
              "id": 823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 822,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 824,
                  "src": "1328:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 821,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1328:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1327:9:2"
            },
            "scope": 949,
            "src": "1282:55:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 825,
              "nodeType": "StructuredDocumentation",
              "src": "1343:171:2",
              "text": " @notice Returns the issue volume, which represents the total debt amount. It is RECOMMENDED to express the issue volume in terms of the denomination unit."
            },
            "functionSelector": "710d3329",
            "id": 830,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "issueVolume",
            "nameLocation": "1528:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1539:2:2"
            },
            "returnParameters": {
              "id": 829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 828,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "1564:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1564:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1563:9:2"
            },
            "scope": 949,
            "src": "1519:54:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 831,
              "nodeType": "StructuredDocumentation",
              "src": "1579:246:2",
              "text": " @notice Returns the bond interest rate. It is RECOMMENDED to express the interest rate in basis points (bps).\n         1 basis point = 0.01% = 0.0001\n         ex: if interest rate = 5%, then coupon() => 500 basis points"
            },
            "functionSelector": "c0bcb26f",
            "id": 836,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "couponRate",
            "nameLocation": "1839:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1849:2:2"
            },
            "returnParameters": {
              "id": 835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 836,
                  "src": "1874:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1874:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1873:9:2"
            },
            "scope": 949,
            "src": "1830:53:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 837,
              "nodeType": "StructuredDocumentation",
              "src": "1889:303:2",
              "text": " @notice Returns the coupon type\n         For example, 0 can denote Zero coupon, 1 can denote Fixed Rate, 2 can denote Floating Rate, and so on\n OPTIONAL - interfaces and other contracts MUST NOT expect these values to be present. The method is used to improve usability."
            },
            "functionSelector": "045017ce",
            "id": 842,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "couponType",
            "nameLocation": "2206:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2216:2:2"
            },
            "returnParameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 840,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "2241:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2241:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2240:7:2"
            },
            "scope": 949,
            "src": "2197:51:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 843,
              "nodeType": "StructuredDocumentation",
              "src": "2254:246:2",
              "text": " @notice Returns the coupon frequency, i.e. the number of times coupons are paid in a year.\n OPTIONAL - interfaces and other contracts MUST NOT expect these values to be present. The method is used to improve usability."
            },
            "functionSelector": "5eb0b3d0",
            "id": 848,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "couponFrequency",
            "nameLocation": "2514:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2529:2:2"
            },
            "returnParameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 846,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 848,
                  "src": "2554:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2554:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2553:9:2"
            },
            "scope": 949,
            "src": "2505:58:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 849,
              "nodeType": "StructuredDocumentation",
              "src": "2569:281:2",
              "text": " @notice Returns the day count basis\n         For example, 0 can denote actual/actual, 1 can denote actual/360, and so on\n OPTIONAL - interfaces and other contracts MUST NOT expect these values to be present. The method is used to improve usability."
            },
            "functionSelector": "bde7aa47",
            "id": 854,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "dayCountBasis",
            "nameLocation": "2864:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2877:2:2"
            },
            "returnParameters": {
              "id": 853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 852,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 854,
                  "src": "2902:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 851,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2902:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2901:7:2"
            },
            "scope": 949,
            "src": "2855:54:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 855,
              "nodeType": "StructuredDocumentation",
              "src": "2915:147:2",
              "text": " @notice Returns the date when bonds were issued to investors. This is a Unix Timestamp similar the one returned by block.timestamp"
            },
            "functionSelector": "8d1343e0",
            "id": 860,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "issueDate",
            "nameLocation": "3076:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3085:2:2"
            },
            "returnParameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 858,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "3110:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3110:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3109:9:2"
            },
            "scope": 949,
            "src": "3067:52:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 861,
              "nodeType": "StructuredDocumentation",
              "src": "3125:237:2",
              "text": " @notice Returns the bond maturity date, i.e, the date when the principal is repaid. This is a Unix Timestamp similar the one returned by block.timestamp\n         The maturity date MUST be greater than the issue date"
            },
            "functionSelector": "d59624b4",
            "id": 866,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "maturityDate",
            "nameLocation": "3376:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3388:2:2"
            },
            "returnParameters": {
              "id": 865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 864,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 866,
                  "src": "3413:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3413:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3412:9:2"
            },
            "scope": 949,
            "src": "3367:55:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 867,
              "nodeType": "StructuredDocumentation",
              "src": "3428:191:2",
              "text": " @notice Returns the principal of an account. It is RECOMMENDED to express the principal in the bond currency unit (e.g., USDC, DAI, etc)\n @param _account account address"
            },
            "functionSelector": "61e20a1c",
            "id": 874,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "principalOf",
            "nameLocation": "3633:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 869,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "3653:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "3645:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 868,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3645:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3644:18:2"
            },
            "returnParameters": {
              "id": 873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 872,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "3685:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3685:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3684:9:2"
            },
            "scope": 949,
            "src": "3624:70:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 875,
              "nodeType": "StructuredDocumentation",
              "src": "3700:247:2",
              "text": " @notice Returns the number of tokens that the `_spender` account has been authorized by the `_owner` to manage\n @param _owner the bondholder address\n @param _spender the address that has been authorized by the bondholder"
            },
            "functionSelector": "dd62ed3e",
            "id": 884,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "3961:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 877,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "3979:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "3971:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 876,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3971:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "3995:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "3987:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3987:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3970:34:2"
            },
            "returnParameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 882,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "4027:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4027:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4026:9:2"
            },
            "scope": 949,
            "src": "3952:84:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 885,
              "nodeType": "StructuredDocumentation",
              "src": "4042:236:2",
              "text": " @notice Authorizes `_spender` account to manage  a specified `_amount`of the bondholder's tokens\n @param _spender the account to be authorized by the bondholder\n @param _amount amount of bond tokens to approve"
            },
            "functionSelector": "095ea7b3",
            "id": 894,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4292:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 887,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "4308:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "4300:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 886,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4300:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 889,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4326:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "4318:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 888,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4318:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4299:35:2"
            },
            "returnParameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "4352:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4352:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4351:6:2"
            },
            "scope": 949,
            "src": "4283:75:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 895,
              "nodeType": "StructuredDocumentation",
              "src": "4364:220:2",
              "text": " @notice Decreases the allowance granted to `_spender` by `_amount`\n @param _spender the address to be authorized by the bondholder\n @param _amount amount of bond tokens to remove from allowance"
            },
            "functionSelector": "a457c2d7",
            "id": 904,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "4598:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 897,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "4624:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 904,
                  "src": "4616:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4616:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 899,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4642:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 904,
                  "src": "4634:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4634:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4615:35:2"
            },
            "returnParameters": {
              "id": 903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 902,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 904,
                  "src": "4668:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 901,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4668:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4667:6:2"
            },
            "scope": 949,
            "src": "4589:85:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 905,
              "nodeType": "StructuredDocumentation",
              "src": "4680:324:2",
              "text": " @notice Transfers `_amount` bonds to the address `_to`. Additionally, this method enables to attach data to the token being transferred\n @param _to the address to send bonds to\n @param _amount amount of bond tokens to transfer\n @param _data additional information provided by the token holder"
            },
            "functionSelector": "be45fd62",
            "id": 916,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "5018:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 907,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5035:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 916,
                  "src": "5027:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5027:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 909,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5048:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 916,
                  "src": "5040:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5040:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 911,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5072:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 916,
                  "src": "5057:20:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 910,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5057:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5026:52:2"
            },
            "returnParameters": {
              "id": 915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 914,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 916,
                  "src": "5096:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5096:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5095:6:2"
            },
            "scope": 949,
            "src": "5009:93:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 917,
              "nodeType": "StructuredDocumentation",
              "src": "5108:451:2",
              "text": " @notice Transfers `_amount` bonds from an account that has previously authorized the caller through the `approve` function\n         This methods also allows to attach data to the token that is being transferred\n @param _from the bondholder address\n @param _to the address to transfer bonds to\n @param _amount amount of bond tokens to transfer.\n @param _data additional information provided by the token holder"
            },
            "functionSelector": "ab67aa58",
            "id": 930,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "5573:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 919,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "5594:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 930,
                  "src": "5586:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5586:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 921,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5609:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 930,
                  "src": "5601:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 920,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5601:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 923,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5622:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 930,
                  "src": "5614:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 922,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5614:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 925,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5646:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 930,
                  "src": "5631:20:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 924,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5631:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5585:67:2"
            },
            "returnParameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 928,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 930,
                  "src": "5670:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 927,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5670:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5669:6:2"
            },
            "scope": 949,
            "src": "5564:112:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 931,
              "nodeType": "StructuredDocumentation",
              "src": "5682:289:2",
              "text": " @notice MUST be emitted when bond tokens are transferred, issued or redeemed, with the exception being during contract creation\n @param _from bondholder account\n @param _to account to transfer bonds to\n @param _amount amount of bond tokens to be transferred"
            },
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "id": 939,
            "name": "Transfer",
            "nameLocation": "5982:8:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 933,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "5999:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "5991:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5991:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 935,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "6014:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "6006:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 934,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6006:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 937,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6027:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "6019:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 936,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6019:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5990:45:2"
            },
            "src": "5976:60:2"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 940,
              "nodeType": "StructuredDocumentation",
              "src": "6042:384:2",
              "text": " @notice MUST be emitted when an account is approved to spend tokens or when the allowance is decreased\n @param _owner bondholder account\n @param _spender the account to be allowed to spend bonds\n @param _amount amount of bond tokens allowed by _owner to be spent by `_spender`\n        Or amount of bond tokens to decrease allowance from `_spender`"
            },
            "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
            "id": 948,
            "name": "Approval",
            "nameLocation": "6437:8:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 942,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "6454:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 948,
                  "src": "6446:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 941,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6446:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 944,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "6470:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 948,
                  "src": "6462:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 943,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6462:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 946,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6488:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 948,
                  "src": "6480:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 945,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6480:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6445:51:2"
            },
            "src": "6431:66:2"
          }
        ],
        "scope": 950,
        "src": "110:6389:2",
        "usedErrors": []
      }
    ],
    "src": "36:6463:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.9",
  "updatedAt": "2023-10-30T04:39:00.013Z",
  "devdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "params": {
          "_amount": "amount of bond tokens allowed by _owner to be spent by `_spender`        Or amount of bond tokens to decrease allowance from `_spender`",
          "_owner": "bondholder account",
          "_spender": "the account to be allowed to spend bonds"
        }
      },
      "Transfer(address,address,uint256)": {
        "params": {
          "_amount": "amount of bond tokens to be transferred",
          "_from": "bondholder account",
          "_to": "account to transfer bonds to"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "params": {
          "_owner": "the bondholder address",
          "_spender": "the address that has been authorized by the bondholder"
        }
      },
      "approve(address,uint256)": {
        "params": {
          "_amount": "amount of bond tokens to approve",
          "_spender": "the account to be authorized by the bondholder"
        }
      },
      "decreaseAllowance(address,uint256)": {
        "params": {
          "_amount": "amount of bond tokens to remove from allowance",
          "_spender": "the address to be authorized by the bondholder"
        }
      },
      "principalOf(address)": {
        "params": {
          "_account": "account address"
        }
      },
      "transfer(address,uint256,bytes)": {
        "params": {
          "_amount": "amount of bond tokens to transfer",
          "_data": "additional information provided by the token holder",
          "_to": "the address to send bonds to"
        }
      },
      "transferFrom(address,address,uint256,bytes)": {
        "params": {
          "_amount": "amount of bond tokens to transfer.",
          "_data": "additional information provided by the token holder",
          "_from": "the bondholder address",
          "_to": "the address to transfer bonds to"
        }
      }
    },
    "title": "ERC-7092 Financial Bonds tandard",
    "version": 1
  },
  "userdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "notice": "MUST be emitted when an account is approved to spend tokens or when the allowance is decreased"
      },
      "Transfer(address,address,uint256)": {
        "notice": "MUST be emitted when bond tokens are transferred, issued or redeemed, with the exception being during contract creation"
      }
    },
    "kind": "user",
    "methods": {
      "allowance(address,address)": {
        "notice": "Returns the number of tokens that the `_spender` account has been authorized by the `_owner` to manage"
      },
      "approve(address,uint256)": {
        "notice": "Authorizes `_spender` account to manage  a specified `_amount`of the bondholder's tokens"
      },
      "couponFrequency()": {
        "notice": "Returns the coupon frequency, i.e. the number of times coupons are paid in a year. OPTIONAL - interfaces and other contracts MUST NOT expect these values to be present. The method is used to improve usability."
      },
      "couponRate()": {
        "notice": "Returns the bond interest rate. It is RECOMMENDED to express the interest rate in basis points (bps).         1 basis point = 0.01% = 0.0001         ex: if interest rate = 5%, then coupon() => 500 basis points"
      },
      "couponType()": {
        "notice": "Returns the coupon type         For example, 0 can denote Zero coupon, 1 can denote Fixed Rate, 2 can denote Floating Rate, and so on OPTIONAL - interfaces and other contracts MUST NOT expect these values to be present. The method is used to improve usability."
      },
      "currency()": {
        "notice": "Returns the bond currency. This is the contract address of the token used to make payments and return the bond principal"
      },
      "dayCountBasis()": {
        "notice": "Returns the day count basis         For example, 0 can denote actual/actual, 1 can denote actual/360, and so on OPTIONAL - interfaces and other contracts MUST NOT expect these values to be present. The method is used to improve usability."
      },
      "decreaseAllowance(address,uint256)": {
        "notice": "Decreases the allowance granted to `_spender` by `_amount`"
      },
      "denomination()": {
        "notice": "Returns the bond denomination. This is the minimum amount in which the bonds may be issued. It MUST be expressed in units of the principal currency.         ex: If the denomination is set at 1,000, and the currency is USDC, then the bond denomination is equivalent to 1,000 USDC."
      },
      "isin()": {
        "notice": "Returns the bond isin"
      },
      "issueDate()": {
        "notice": "Returns the date when bonds were issued to investors. This is a Unix Timestamp similar the one returned by block.timestamp"
      },
      "issueVolume()": {
        "notice": "Returns the issue volume, which represents the total debt amount. It is RECOMMENDED to express the issue volume in terms of the denomination unit."
      },
      "maturityDate()": {
        "notice": "Returns the bond maturity date, i.e, the date when the principal is repaid. This is a Unix Timestamp similar the one returned by block.timestamp         The maturity date MUST be greater than the issue date"
      },
      "name()": {
        "notice": "Returns the bond name"
      },
      "principalOf(address)": {
        "notice": "Returns the principal of an account. It is RECOMMENDED to express the principal in the bond currency unit (e.g., USDC, DAI, etc)"
      },
      "symbol()": {
        "notice": "Returns the bond symbol         It is RECOMMENDED to represent the symbol as a combination of the issuer issuer's shorter name and the maturity date         Ex: If a company named Green Energy issues bonds that will mature on october 25, 2030, the bond symbol could be `GE30` or `GE2030` or `GE102530`"
      },
      "transfer(address,uint256,bytes)": {
        "notice": "Transfers `_amount` bonds to the address `_to`. Additionally, this method enables to attach data to the token being transferred"
      },
      "transferFrom(address,address,uint256,bytes)": {
        "notice": "Transfers `_amount` bonds from an account that has previously authorized the caller through the `approve` function         This methods also allows to attach data to the token that is being transferred"
      }
    },
    "version": 1
  }
}